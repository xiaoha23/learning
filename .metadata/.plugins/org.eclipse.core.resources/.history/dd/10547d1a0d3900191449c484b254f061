package com.xiaonao;

public class Greeter {

	public void greet(Greeting greeting) {
		greeting.perform();
	}
	
	public static void main(String[] args) {
		Greeter greeter = new Greeter();
		
		
		HelloWorldGreeting greeting = new HelloWorldGreeting();
		greeter.greet(greeting);
		
		/* Since the interface name and method name don't matter, and there is an interface greeting
		 * that matches the signature of MyLambda, that greeting interface can be reused.
		 * MyLambda myLambdaFucntion = () -> System.out.println("Hello World!");
		
		myLambdaFucntion.foo();*/
		
		
		Greeting myLambdaFucntion = () -> System.out.println("Hello World!");
		myLambdaFucntion.perform();
		
		
		//inner annoymous class
		Greeting innerClassGreeting = new Greeting() {
			public void perform() {
				System.out.println("Hello World!");
			}
		}
		
		
		
		MyAdd addFunction = (int a, int b) -> a + b;
		
	}
	
	
	
	
}

/*interface MyLambda {
	void foo();
}*/

interface MyAdd{
	int add(int x, int y);
}